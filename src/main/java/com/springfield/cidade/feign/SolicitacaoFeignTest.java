package com.springfield.cidade.feign;

import com.springfield.cidade.solicitacao.EventoSolicitacao;
import com.springfield.cidade.solicitacao.HistoricoSolicitacao;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class SolicitacaoFeignTest implements CommandLineRunner {

    @Autowired
    private SolicitacaoFeignClient solicitacaoFeign;

    @Override
    public void run(String... args) throws Exception {
        System.out.println("üîé Testando opera√ß√µes com Feign...");

        // Criar nova solicita√ß√£o
        HistoricoSolicitacao nova = solicitacaoFeign
                .novaSolicitacao(10000, "Solicita√ß√£o via Feign Teste")
                .getBody();
        System.out.println("üÜï Solicita√ß√£o criada: " + nova.getId() + " - Estado: " + nova.getEstado());

        // Transi√ß√£o de estado: ANALISAR
        HistoricoSolicitacao analisada = solicitacaoFeign
                .transitarEstado(nova.getId(), EventoSolicitacao.ANALISAR)
                .getBody();
        System.out.println("‚úÖ Ap√≥s ANALISAR: Estado = " + analisada.getEstado());

        // Transi√ß√£o de estado: CONCLUIR
        HistoricoSolicitacao concluida = solicitacaoFeign
                .transitarEstado(nova.getId(), EventoSolicitacao.CONCLUIR)
                .getBody();
        System.out.println("üèÅ Ap√≥s CONCLUIR: Estado = " + concluida.getEstado());

        // Consultar hist√≥rico
        HistoricoSolicitacao[] historico = solicitacaoFeign.listarHistorico(10000).getBody();
        System.out.println("üìú Hist√≥rico do cidad√£o 10000:");
        for (HistoricoSolicitacao h : historico) {
            System.out.println("‚û°Ô∏è " + h.getId() + ": " + h.getEstado() + " - " + h.getDescricaoDemanda());
        }
    }
}
